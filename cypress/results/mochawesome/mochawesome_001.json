{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-24T13:57:45.803Z",
    "end": "2023-08-24T13:57:51.851Z",
    "duration": 6048,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "44036ed1-87a2-439c-9522-16213a0dd9e0",
      "title": "",
      "fullFile": "cypress/e2e/secondTest.spec.ts",
      "file": "cypress/e2e/secondTest.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1b4f109b-d377-41ea-b7a0-e713030693c8",
          "title": "Authentication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deletes a new article in a global feed",
              "fullTitle": "Authentication deletes a new article in a global feed",
              "timedOut": null,
              "duration": 6017,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let articleTitle = '';\ncy.generateRandomNumber().then((ID) => {\n    articleTitle = `Test article ${ID}`;\n});\n// login\ncy.get('@token').then((token) => {\n    const requestBody = {\n        \"article\": {\n            \"tagList\": [],\n            \"title\": articleTitle,\n            \"description\": \"It's the first test article\",\n            \"body\": \"What a cool first test\"\n        }\n    };\n    // create article\n    cy.request({\n        url: 'https://conduit.productionready.io/api/articles/',\n        headers: { Authorization: `Token ${token}` },\n        method: 'POST',\n        body: requestBody\n    }).then((response) => {\n        expect(response.status).to.be.greaterThan(199).and.lessThan(300);\n    });\n    return cy.wrap(token);\n}).then((token) => {\n    cy.contains('Global Feed').click();\n    cy.get('.preview-link').first().click();\n    cy.get('.article-actions').contains('Delete Article').click();\n    return cy.wrap(token);\n}).then((token) => {\n    cy.request({\n        url: 'https://conduit.productionready.io/api/articles?limit=10&offset=0',\n        headers: { Authorization: `Token ${token}` },\n        method: 'GET'\n    }).its('body').then((body) => {\n        const { articles } = body;\n        expect(articles[0].title).not.to.equal(articleTitle);\n    });\n});",
              "err": {},
              "uuid": "ef2a52e0-2493-44fd-98ea-74d0cb0d982b",
              "parentUUID": "1b4f109b-d377-41ea-b7a0-e713030693c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": ["ef2a52e0-2493-44fd-98ea-74d0cb0d982b"],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6017,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
